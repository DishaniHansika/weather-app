{"version":3,"sources":["components/Weather.js","components/CurrentLocation.js","components/CityLocation.js","components/WeatherChart.js","components/WeeklyForecast.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","weatherData","CelciusTemp","Math","floor","main","temp","className","name","moment","format","weather","src","description","humidity","CurrentLocation","useState","lati","setLatitude","longi","setLongitude","setWeather","useEffect","fetchData","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Axios","get","process","response","data","console","log","CircularProgress","CityLocation","city","setCity","cityWeather","setCityWeather","handleSubmit","event","preventDefault","searchResponse","history","useHistory","style","backgroundImage","backgroundSize","padding","onSubmit","type","placeholder","value","onChange","target","margin","border","borderRadius","fontWeight","backgroundColor","onClick","window","location","reload","push","WeatherChart","weatherChartData","map","i","class","daily","dt","day","night","wind_speed","WeeklyForecast","setWeatherData","fetchWeeklyData","weeklyResponse","height","goBack","float","App","exact","path","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6e86365.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\n\nconst Weather = ({ weatherData }) => {\n  const CelciusTemp = Math.floor(weatherData.main.temp - 273);\n  return (\n    <div className=\"weather-data\">\n      <div className=\"location\">{weatherData.name}</div>\n      <div className=\"date\">\n        {moment().format(\"dddd\")}, {moment().format(\"LL\")}\n      </div>\n      <div className=\"temperature\">{CelciusTemp}&deg;C</div>\n      <div className=\"weatherChange\">\n        {weatherData.weather[0].main === \"Rain\" ? (\n          <div className=\"rain\">\n            <div className=\"weatherIcon\">\n              <img src=\"https://img.icons8.com/color/96/000000/rain--v2.png\" />\n            </div>\n            Take an umbrella or a raincoat\n          </div>\n        ) : weatherData.weather[0].main === \"Clouds\" ? (\n          <div className=\"clouds\">\n            <div className=\"weatherIcon\">\n              <img src=\"https://img.icons8.com/color/96/000000/clouds.png\" />\n            </div>\n            Make sure you wear a jacket\n          </div>\n        ) : weatherData.weather[0].main === \"Clear\" ? (\n          <div className=\"clear\">\n            <div className=\"weatherIcon\">\n              <img src=\"https://img.icons8.com/emoji/96/000000/sun-emoji.png\" />\n            </div>\n            Don't forget your sunglasses\n          </div>\n        ) : weatherData.weather[0].main === \"Thunderstorm\" ? (\n          <div className=\"thunderstorm\">\n            <div className=\"weatherIcon\">\n              <img src=\"https://img.icons8.com/external-justicon-flat-justicon/64/000000/external-thunderstorm-weather-justicon-flat-justicon.png\" />\n            </div>\n            Wear rubber boots if going outdoors\n          </div>\n        ) : weatherData.weather[0].main === \"Drizzle\" ? (\n          <div className=\"drizzle\">\n            <div className=\"weatherIcon\">\n              <img src=\"https://img.icons8.com/color/96/000000/light-rain-2--v1.png\" />\n            </div>\n            Wear a hoodie\n          </div>\n        ) : weatherData.weather[0].main === \"Snow\" ? (\n          <div className=\"snow\">\n            <div className=\"weatherIcon\">\n              <img src=\"https://img.icons8.com/color/48/000000/snow--v1.png\" />\n            </div>\n            Put on a sweater\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n\n      <div className=\"description\">\n        {weatherData.weather[0].main}\n        <br />({weatherData.weather[0].description})\n      </div>\n      <div className=\"humidity\">\n        <div className=\"humidityIcon\">\n          <img src=\"https://img.icons8.com/offices/30/000000/humidity.png\" />\n        </div>\n        {weatherData.main.humidity} %\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport Weather from \"./Weather\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst CurrentLocation = () => {\n  const [lati, setLatitude] = useState(\"\");\n  const [longi, setLongitude] = useState(\"\");\n  const [weather, setWeather] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n      });\n\n      const response = await Axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lati}&lon=${longi}&appid=${process.env.REACT_APP_API_KEY}`\n      );\n      setWeather(response.data);\n      console.log(response.data);\n    };\n    fetchData();\n  }, [lati, longi]);\n\n  return (\n    <div>\n      {typeof weather.main != \"undefined\" ? (\n        <div className=\"locationWeather\">\n          <Weather weatherData={weather} />\n        </div>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nexport default CurrentLocation;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Weather from \"./Weather\";\nimport CurrentLocation from \"./CurrentLocation\";\n\nconst CityLocation = () => {\n  const [city, setCity] = useState(\"\");\n  const [cityWeather, setCityWeather] = useState([]);\n\n  const handleChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const searchResponse = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}`\n    );\n    setCityWeather(searchResponse.data);\n    setCity(\"\");\n  };\n  const refresh = () => {\n    window.location.reload();\n  };\n\n  let history = useHistory();\n  return (\n    <div\n      className=\"cityDiv\"\n      style={{\n        backgroundImage: \"url(/weather.png)\",\n        backgroundSize: \"cover\",\n        padding: \"10%\",\n      }}\n    >\n      <form className=\"search\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter City\"\n          value={city}\n          onChange={handleChange}\n        />\n        <button\n          style={{\n            margin: \"8px\",\n            border: \"none\",\n            padding: \"10px\",\n            borderRadius: \"4px\",\n            fontWeight: \"bold\",\n            backgroundColor: \"rgba(200, 200, 210, 0.9)\",\n          }}\n        >\n          Get Weather\n        </button>\n        <button\n          onClick={refresh}\n          style={{\n            margin: \"5px\",\n            border: \"none\",\n            padding: \"10px\",\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n          }}\n        >\n          <img src=\"https://img.icons8.com/android/24/000000/refresh.png\" />\n        </button>\n      </form>\n      <br />\n\n      {typeof cityWeather.main != \"undefined\" ? (\n        <div className=\"locationWeather\">\n          <Weather weatherData={cityWeather} />\n        </div>\n      ) : (\n        <div>\n          <CurrentLocation />\n          <div style={{ margin: \"25px 15px\" }}>\n            <button\n              className=\"forecastBtn\"\n              onClick={() => history.push(`/weeklyforecast`)}\n            >\n              7 - Day Forecast\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CityLocation;\n","import React from \"react\";\nimport moment, { ISO_8601 } from \"moment\";\n\nconst WeatherChart = ({ weatherChartData }) => {\n  return (\n    <>\n      {[0, 1, 2, 3, 4, 5, 6].map((i) => (\n        <div className=\"weatherDataWeek\">\n          <div class=\"day\">\n            {moment(weatherChartData.daily[i].dt * 1000).format(\"ddd\")}\n          </div>\n          <div className=\"weatherChangeWeek\">\n            {weatherChartData.daily[i].weather[0].main === \"Rain\" ? (\n              <div className=\"weatherIcon\">\n                <img src=\"https://img.icons8.com/color/96/000000/rain--v2.png\" />\n              </div>\n            ) : weatherChartData.daily[i].weather[0].main === \"Clear\" ? (\n              <div className=\"weatherIcon\">\n                <img src=\"https://img.icons8.com/emoji/96/000000/sun-emoji.png\" />\n              </div>\n            ) : weatherChartData.daily[i].weather[0].main === \"Thunderstorm\" ? (\n              <div className=\"weatherIcon\">\n                <img src=\"https://img.icons8.com/external-justicon-flat-justicon/64/000000/external-thunderstorm-weather-justicon-flat-justicon.png\" />\n              </div>\n            ) : weatherChartData.daily[i].weather[0].main === \"Drizzle\" ? (\n              <div className=\"weatherIcon\">\n                <img src=\"https://img.icons8.com/color/96/000000/light-rain-2--v1.png\" />\n              </div>\n            ) : weatherChartData.daily[i].weather[0].main === \"Snow\" ? (\n              <div className=\"weatherIcon\">\n                <img src=\"https://img.icons8.com/color/48/000000/snow--v1.png\" />\n              </div>\n            ) : (\n              <div></div>\n            )}\n          </div>\n          <div className=\"temperatureWeek\">\n            Day: {weatherChartData.daily[i].temp.day}&deg;C\n          </div>\n          <div className=\"temperatureWeek\">\n            Night: {weatherChartData.daily[i].temp.night}&deg;C\n          </div>\n          <div className=\"wind\">\n            <img src=\"https://img.icons8.com/material-outlined/24/000000/wind.png\" />{\" \"}\n            {weatherChartData.daily[i].wind_speed} ms<sup>-1</sup>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default WeatherChart;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport WeatherChart from \"./WeatherChart\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst WeeklyForecast = () => {\n  const [lati, setLatitude] = useState(\"\");\n  const [longi, setLongitude] = useState(\"\");\n  const [weatherData, setWeatherData] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchWeeklyData = async () => {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setLatitude(position.coords.latitude);\n        setLongitude(position.coords.longitude);\n      });\n\n      const weeklyResponse = await Axios.get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${lati}&lon=${longi}&exclude=minutely,hourly&units=metric&appid=${process.env.REACT_APP_API_KEY}`\n      );\n      setWeatherData(weeklyResponse.data);\n    };\n    fetchWeeklyData();\n  }, [lati, longi]);\n\n  return (\n    <div\n      className=\"dataDiv\"\n      style={{\n        backgroundImage: \"url(/weather5.jpg)\",\n        backgroundSize: \"cover\",\n        padding: \"10%\",\n        height: \"1200px\",\n      }}\n    >\n      {typeof weatherData.daily != \"undefined\" ? (\n        <div className=\"chartWeather\">\n          <button\n            onClick={() => history.goBack()}\n            style={{\n              backgroundColor: \"rgba(0,0,0,0)\",\n              border: \"none\",\n              float: \"left\",\n            }}\n          >\n            <img src=\"https://img.icons8.com/ios/50/000000/circled-left-2.png\" />\n          </button>\n          <h2>7-Day Forecast</h2>\n          <br />\n          <WeatherChart weatherChartData={weatherData} />\n        </div>\n      ) : (\n        <CircularProgress />\n      )}\n    </div>\n  );\n};\n\nexport default WeeklyForecast;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CityLocation from \"./components/CityLocation\";\nimport CurrentLocation from \"./components/CurrentLocation\";\nimport WeeklyForecast from \"./components/WeeklyForecast\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            children={\n              <div>\n                <CityLocation />\n              </div>\n            }\n          />\n          <Route path=\"/weeklyforecast\" children={<WeeklyForecast />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}